#define FUEL_CAPACITY 1000
#define WATER_CAPACITY 1000
#define CARGO_CAPACITY 1000


[0, FUEL_CAPACITY] fuel;
[0, WATER_CAPACITY] water;
[0, CARGO_CAPACITY] cargo;
[0, 1000] fire;
[0, 1] smoke;
[0, 1] smoked;
[0, 10] v;
[0, 100] alt;
[0, 1000] d;
[0, 100] time;


//on ground, stopped
{ mode 1;

  flow:
        d/dt[fuel] = 0;
        d/dt[water] = 0;
        d/dt[cargo] = 0;	
        d/dt[fire] = 0;	
        d/dt[smoke] = 0;	
        d/dt[smoked] = 0;	
        d/dt[v] = 0;
        d/dt[alt] = 0;
        d/dt[d] = 0;	
  jump:
        (fuel > 0) ==> @2 (v' = 10);
}


//takeoff
{
  mode 2;
  flow:
        d/dt[fuel] = (-2 * v);
        d/dt[water] = 0;
        d/dt[cargo] = -v;	
        d/dt[fire] = 0;	
        d/dt[smoke] = 0;	
        d/dt[smoked] = 0;	
        d/dt[alt] = v;
        d/dt[v] = 0;	
        d/dt[d] = v;	
  jump:
	(alt = 50) ==> @3 true;
}

//fly to fire
{
  mode 3;
  flow:
        d/dt[fuel] = -v;
        d/dt[water] = 0;
        d/dt[cargo] = -v;	
        d/dt[fire] = 0;	
        d/dt[smoke] = 0;
        d/dt[smoked] = 0;		
        d/dt[alt] = 0;
        d/dt[v] = 0;	
        d/dt[d] = v;	
  jump:

	(and (smoke = 0) (d = 100)) ==> @5 (and (alt' = alt) (smoke' = smoke)
                                  (or (and (alt' <= 50) (smoke = 1)) (smoked' <= 0)) 
                                  (or (not (and (alt' <= 50) (smoke = 1))) (smoked' >= 1)));
	(and (smoke = 1) (d = 100)) ==> @4 (and (alt' = 100) (smoke' = smoke)
                                  (or (and (alt' <= 50) (smoke = 1)) (smoked' <= 0)) 
                                  (or (not (and (alt' <= 50) (smoke = 1))) (smoked' = 1)));

/*
	(and  (d = 100)) ==> @5 (and (alt' = alt) (smoke' = smoke)
                                     (or (and (alt' <= 50) (smoke = 1)) (smoked' <= 0)) 
                                     (or (not (and (alt' <= 50) (smoke = 1))) (smoked' >= 1)));
*/	
}

//extinguish fire high, 20s, 100 units of fire
{
  mode 4;
  flow:
        d/dt[fuel] = -v;
        d/dt[water] = -5;
        d/dt[cargo] = -(v + 5);	
        d/dt[fire] = -500/alt;	
        d/dt[smoke] = 0;
        d/dt[smoked] = 0;		
        d/dt[alt] = 0;
        d/dt[v] = 0;	
        d/dt[d] = 0;	
  jump:
	(or  (fire = 0) (water = 0)) ==> @6 true;
}

//extinguish fire low, 20s, 200 units of fire
{
  mode 5;
  flow:
        d/dt[fuel] = -v;
        d/dt[water] = -5;
        d/dt[cargo] = -(v + 5);	
        d/dt[fire] = -500/alt;	
        d/dt[smoke] = 0;
        d/dt[smoked] = 0;		
        d/dt[alt] = 0;
        d/dt[v] = 0;	
        d/dt[d] = 0;	
  jump:
	(or (fire = 0) (water = 0)) ==> @6 true;
}

//fly home
{
  mode 6;
  flow:
        d/dt[fuel] = -v;
        d/dt[water] = 0;
        d/dt[cargo] = -v;	
        d/dt[fire] = 0;	
        d/dt[smoke] = 0;
        d/dt[smoked] = 0;		
        d/dt[alt] = 0;
        d/dt[v] = 0;	
        d/dt[d] = -v;	
  jump:
	true ==> @7 true;
}

//land
{
  mode 7;
  flow:
        d/dt[fuel] = -v;
        d/dt[water] = 0;
        d/dt[cargo] = -v;	
        d/dt[fire] = 0;	
        d/dt[smoke] = 0;
        d/dt[smoked] = 0;		
        d/dt[alt] = -v;
        d/dt[v] = 0;	
        d/dt[d] = -v;	
  jump:
	(and (d = 0) (alt = 0)) ==> @1 (v' = 0);
}


init:
@1	(and (d = 0) (v = 0) (alt = 0)
             (fire = 100) 
	     (fuel = 900)
	     (water = 100) 
	     (smoked = 0)
	     );

goal:
@1	(fire > 1);
@4      (smoked = 1);
@5      (smoked = 1);
(set-logic QF_NRA_ODE)
(declare-fun c12 () Real)
(declare-fun c23 () Real)
(declare-fun c31 () Real)
(declare-fun h1 () Real)
(declare-fun h2 () Real)
(declare-fun h3 () Real)
(declare-fun k1 () Real)
(declare-fun k2 () Real)
(declare-fun k3 () Real)
(declare-fun tau () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun c12_0_0 () Real)
(declare-fun c12_0_t () Real)
(declare-fun c12_1_0 () Real)
(declare-fun c12_1_t () Real)
(declare-fun c12_2_0 () Real)
(declare-fun c12_2_t () Real)
(declare-fun c23_0_0 () Real)
(declare-fun c23_0_t () Real)
(declare-fun c23_1_0 () Real)
(declare-fun c23_1_t () Real)
(declare-fun c23_2_0 () Real)
(declare-fun c23_2_t () Real)
(declare-fun c31_0_0 () Real)
(declare-fun c31_0_t () Real)
(declare-fun c31_1_0 () Real)
(declare-fun c31_1_t () Real)
(declare-fun c31_2_0 () Real)
(declare-fun c31_2_t () Real)
(declare-fun h1_0_0 () Real)
(declare-fun h1_0_t () Real)
(declare-fun h1_1_0 () Real)
(declare-fun h1_1_t () Real)
(declare-fun h1_2_0 () Real)
(declare-fun h1_2_t () Real)
(declare-fun h2_0_0 () Real)
(declare-fun h2_0_t () Real)
(declare-fun h2_1_0 () Real)
(declare-fun h2_1_t () Real)
(declare-fun h2_2_0 () Real)
(declare-fun h2_2_t () Real)
(declare-fun h3_0_0 () Real)
(declare-fun h3_0_t () Real)
(declare-fun h3_1_0 () Real)
(declare-fun h3_1_t () Real)
(declare-fun h3_2_0 () Real)
(declare-fun h3_2_t () Real)
(declare-fun k1_0_0 () Real)
(declare-fun k1_0_t () Real)
(declare-fun k1_1_0 () Real)
(declare-fun k1_1_t () Real)
(declare-fun k1_2_0 () Real)
(declare-fun k1_2_t () Real)
(declare-fun k2_0_0 () Real)
(declare-fun k2_0_t () Real)
(declare-fun k2_1_0 () Real)
(declare-fun k2_1_t () Real)
(declare-fun k2_2_0 () Real)
(declare-fun k2_2_t () Real)
(declare-fun k3_0_0 () Real)
(declare-fun k3_0_t () Real)
(declare-fun k3_1_0 () Real)
(declare-fun k3_1_t () Real)
(declare-fun k3_2_0 () Real)
(declare-fun k3_2_t () Real)
(declare-fun tau_0_0 () Real)
(declare-fun tau_0_t () Real)
(declare-fun tau_1_0 () Real)
(declare-fun tau_1_t () Real)
(declare-fun tau_2_0 () Real)
(declare-fun tau_2_t () Real)
(declare-fun x1_0_0 () Real)
(declare-fun x1_0_t () Real)
(declare-fun x1_1_0 () Real)
(declare-fun x1_1_t () Real)
(declare-fun x1_2_0 () Real)
(declare-fun x1_2_t () Real)
(declare-fun x2_0_0 () Real)
(declare-fun x2_0_t () Real)
(declare-fun x2_1_0 () Real)
(declare-fun x2_1_t () Real)
(declare-fun x2_2_0 () Real)
(declare-fun x2_2_t () Real)
(declare-fun x3_0_0 () Real)
(declare-fun x3_0_t () Real)
(declare-fun x3_1_0 () Real)
(declare-fun x3_1_t () Real)
(declare-fun x3_2_0 () Real)
(declare-fun x3_2_t () Real)
(declare-fun time_0 () Real)
(declare-fun time_1 () Real)
(declare-fun time_2 () Real)
(declare-fun mode_1_0 () Real)
(declare-fun mode_1_1 () Real)
(declare-fun mode_1_2 () Real)
(declare-fun mode_2_0 () Real)
(declare-fun mode_2_1 () Real)
(declare-fun mode_2_2 () Real)
(declare-fun mode_3_0 () Real)
(declare-fun mode_3_1 () Real)
(declare-fun mode_3_2 () Real)
(declare-fun gamma_t3_1 () Real)
(declare-fun gamma_t3_2 () Real)
(declare-fun gamma_t2_1 () Real)
(declare-fun gamma_t2_2 () Real)
(declare-fun gamma_t1_1 () Real)
(declare-fun gamma_t1_2 () Real)
(declare-fun gamma_t3_2_0_0 () Real)
(declare-fun gamma_t3_1_1_0 () Real)
(declare-fun gamma_t3_2_1_0 () Real)
(declare-fun gamma_t3_1_2_0 () Real)
(declare-fun gamma_t3_2_2_0 () Real)
(declare-fun gamma_t2_2_0_0 () Real)
(declare-fun gamma_t2_1_1_0 () Real)
(declare-fun gamma_t2_2_1_0 () Real)
(declare-fun gamma_t2_1_2_0 () Real)
(declare-fun gamma_t2_2_2_0 () Real)
(declare-fun gamma_t1_2_0_0 () Real)
(declare-fun gamma_t1_1_1_0 () Real)
(declare-fun gamma_t1_2_1_0 () Real)
(declare-fun gamma_t1_1_2_0 () Real)
(declare-fun gamma_t1_2_2_0 () Real)
(define-ode flow_0 ((= d/dt[c12] (+ (* 0 gamma_t2_2) (* 0 gamma_t1_2))) (= d/dt[c23] (+ (* 0 gamma_t3_2) (* 0 gamma_t2_2))) (= d/dt[c31] (+ (* 0 gamma_t3_2) (* 0 gamma_t1_2))) (= d/dt[h1] (* 0 gamma_t1_2)) (= d/dt[h2] (* 0 gamma_t2_2)) (= d/dt[h3] (* 0 gamma_t3_2)) (= d/dt[k1] (* 0 gamma_t1_2)) (= d/dt[k2] (* 0 gamma_t2_2)) (= d/dt[k3] (* 0 gamma_t3_2)) (= d/dt[tau] (+ (* 1 gamma_t3_2) (* 1 gamma_t2_2) (* 1 gamma_t1_2))) (= d/dt[x1] (+ (* 0 gamma_t3_2) (* 0 gamma_t2_2) (* (* k1 (- h1 (+ (+ (* (- (- 1 c12) c31) x1) (* c12 x2)) (* c31 x3)))) gamma_t1_2))) (= d/dt[x2] (+ (* 0 gamma_t3_2) (* (* k2 (- h2 (+ (+ (* (- (- 1 c12) c23) x2) (* c12 x1)) (* c23 x3)))) gamma_t2_2) (* 0 gamma_t1_2))) (= d/dt[x3] (+ (* (* k3 (- h3 (+ (+ (* (- (- 1 c23) c31) x3) (* c23 x1)) (* c31 x2)))) gamma_t3_2) (* 0 gamma_t2_2) (* 0 gamma_t1_2))) (= d/dt[gamma_t3_2] 0) (= d/dt[gamma_t2_2] 0) (= d/dt[gamma_t1_2] 0)))
(define-ode flow_1 ((= d/dt[c12] (+ (* 0 gamma_t2_1) (* 0 gamma_t2_2) (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[c23] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2) (* 0 gamma_t2_1) (* 0 gamma_t2_2))) (= d/dt[c31] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2) (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[h1] (+ (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[h2] (+ (* 0 gamma_t2_1) (* 0 gamma_t2_2))) (= d/dt[h3] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2))) (= d/dt[k1] (+ (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[k2] (+ (* 0 gamma_t2_1) (* 0 gamma_t2_2))) (= d/dt[k3] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2))) (= d/dt[tau] (+ (* 1 gamma_t3_1) (* 1 gamma_t3_2) (* 1 gamma_t2_1) (* 1 gamma_t2_2) (* 1 gamma_t1_1) (* 1 gamma_t1_2))) (= d/dt[x1] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2) (* 0 gamma_t2_1) (* 0 gamma_t2_2) (* (* (- 0 k1) (+ (+ (* (- (- 1 c12) c31) x1) (* c12 x2)) (* c31 x3))) gamma_t1_1) (* (* k1 (- h1 (+ (+ (* (- (- 1 c12) c31) x1) (* c12 x2)) (* c31 x3)))) gamma_t1_2))) (= d/dt[x2] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2) (* (* (- 0 k2) (+ (+ (* (- (- 1 c12) c23) x2) (* c12 x1)) (* c23 x3))) gamma_t2_1) (* (* k2 (- h2 (+ (+ (* (- (- 1 c12) c23) x2) (* c12 x1)) (* c23 x3)))) gamma_t2_2) (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[x3] (+ (* (* (- 0 k3) (+ (+ (* (- (- 1 c23) c31) x3) (* c23 x1)) (* c31 x2))) gamma_t3_1) (* (* k3 (- h3 (+ (+ (* (- (- 1 c23) c31) x3) (* c23 x1)) (* c31 x2)))) gamma_t3_2) (* 0 gamma_t2_1) (* 0 gamma_t2_2) (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[gamma_t3_1] 0) (= d/dt[gamma_t3_2] 0) (= d/dt[gamma_t2_1] 0) (= d/dt[gamma_t2_2] 0) (= d/dt[gamma_t1_1] 0) (= d/dt[gamma_t1_2] 0)))
(define-ode flow_2 ((= d/dt[c12] (+ (* 0 gamma_t2_1) (* 0 gamma_t2_2) (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[c23] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2) (* 0 gamma_t2_1) (* 0 gamma_t2_2))) (= d/dt[c31] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2) (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[h1] (+ (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[h2] (+ (* 0 gamma_t2_1) (* 0 gamma_t2_2))) (= d/dt[h3] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2))) (= d/dt[k1] (+ (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[k2] (+ (* 0 gamma_t2_1) (* 0 gamma_t2_2))) (= d/dt[k3] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2))) (= d/dt[tau] (+ (* 1 gamma_t3_1) (* 1 gamma_t3_2) (* 1 gamma_t2_1) (* 1 gamma_t2_2) (* 1 gamma_t1_1) (* 1 gamma_t1_2))) (= d/dt[x1] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2) (* 0 gamma_t2_1) (* 0 gamma_t2_2) (* (* (- 0 k1) (+ (+ (* (- (- 1 c12) c31) x1) (* c12 x2)) (* c31 x3))) gamma_t1_1) (* (* k1 (- h1 (+ (+ (* (- (- 1 c12) c31) x1) (* c12 x2)) (* c31 x3)))) gamma_t1_2))) (= d/dt[x2] (+ (* 0 gamma_t3_1) (* 0 gamma_t3_2) (* (* (- 0 k2) (+ (+ (* (- (- 1 c12) c23) x2) (* c12 x1)) (* c23 x3))) gamma_t2_1) (* (* k2 (- h2 (+ (+ (* (- (- 1 c12) c23) x2) (* c12 x1)) (* c23 x3)))) gamma_t2_2) (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[x3] (+ (* (* (- 0 k3) (+ (+ (* (- (- 1 c23) c31) x3) (* c23 x1)) (* c31 x2))) gamma_t3_1) (* (* k3 (- h3 (+ (+ (* (- (- 1 c23) c31) x3) (* c23 x1)) (* c31 x2)))) gamma_t3_2) (* 0 gamma_t2_1) (* 0 gamma_t2_2) (* 0 gamma_t1_1) (* 0 gamma_t1_2))) (= d/dt[gamma_t3_1] 0) (= d/dt[gamma_t3_2] 0) (= d/dt[gamma_t2_1] 0) (= d/dt[gamma_t2_2] 0) (= d/dt[gamma_t1_1] 0) (= d/dt[gamma_t1_2] 0)))
(assert (<= 0 c12_0_0))
(assert (<= c12_0_0 1))
(assert (<= 0 c12_0_t))
(assert (<= c12_0_t 1))
(assert (<= 0 c12_1_0))
(assert (<= c12_1_0 1))
(assert (<= 0 c12_1_t))
(assert (<= c12_1_t 1))
(assert (<= 0 c12_2_0))
(assert (<= c12_2_0 1))
(assert (<= 0 c12_2_t))
(assert (<= c12_2_t 1))
(assert (<= 0 c23_0_0))
(assert (<= c23_0_0 1))
(assert (<= 0 c23_0_t))
(assert (<= c23_0_t 1))
(assert (<= 0 c23_1_0))
(assert (<= c23_1_0 1))
(assert (<= 0 c23_1_t))
(assert (<= c23_1_t 1))
(assert (<= 0 c23_2_0))
(assert (<= c23_2_0 1))
(assert (<= 0 c23_2_t))
(assert (<= c23_2_t 1))
(assert (<= 0 c31_0_0))
(assert (<= c31_0_0 1))
(assert (<= 0 c31_0_t))
(assert (<= c31_0_t 1))
(assert (<= 0 c31_1_0))
(assert (<= c31_1_0 1))
(assert (<= 0 c31_1_t))
(assert (<= c31_1_t 1))
(assert (<= 0 c31_2_0))
(assert (<= c31_2_0 1))
(assert (<= 0 c31_2_t))
(assert (<= c31_2_t 1))
(assert (<= 100 h1_0_0))
(assert (<= h1_0_0 300))
(assert (<= 100 h1_0_t))
(assert (<= h1_0_t 300))
(assert (<= 100 h1_1_0))
(assert (<= h1_1_0 300))
(assert (<= 100 h1_1_t))
(assert (<= h1_1_t 300))
(assert (<= 100 h1_2_0))
(assert (<= h1_2_0 300))
(assert (<= 100 h1_2_t))
(assert (<= h1_2_t 300))
(assert (<= 100 h2_0_0))
(assert (<= h2_0_0 300))
(assert (<= 100 h2_0_t))
(assert (<= h2_0_t 300))
(assert (<= 100 h2_1_0))
(assert (<= h2_1_0 300))
(assert (<= 100 h2_1_t))
(assert (<= h2_1_t 300))
(assert (<= 100 h2_2_0))
(assert (<= h2_2_0 300))
(assert (<= 100 h2_2_t))
(assert (<= h2_2_t 300))
(assert (<= 100 h3_0_0))
(assert (<= h3_0_0 300))
(assert (<= 100 h3_0_t))
(assert (<= h3_0_t 300))
(assert (<= 100 h3_1_0))
(assert (<= h3_1_0 300))
(assert (<= 100 h3_1_t))
(assert (<= h3_1_t 300))
(assert (<= 100 h3_2_0))
(assert (<= h3_2_0 300))
(assert (<= 100 h3_2_t))
(assert (<= h3_2_t 300))
(assert (<= 0 k1_0_0))
(assert (<= k1_0_0 1))
(assert (<= 0 k1_0_t))
(assert (<= k1_0_t 1))
(assert (<= 0 k1_1_0))
(assert (<= k1_1_0 1))
(assert (<= 0 k1_1_t))
(assert (<= k1_1_t 1))
(assert (<= 0 k1_2_0))
(assert (<= k1_2_0 1))
(assert (<= 0 k1_2_t))
(assert (<= k1_2_t 1))
(assert (<= 0 k2_0_0))
(assert (<= k2_0_0 1))
(assert (<= 0 k2_0_t))
(assert (<= k2_0_t 1))
(assert (<= 0 k2_1_0))
(assert (<= k2_1_0 1))
(assert (<= 0 k2_1_t))
(assert (<= k2_1_t 1))
(assert (<= 0 k2_2_0))
(assert (<= k2_2_0 1))
(assert (<= 0 k2_2_t))
(assert (<= k2_2_t 1))
(assert (<= 0 k3_0_0))
(assert (<= k3_0_0 1))
(assert (<= 0 k3_0_t))
(assert (<= k3_0_t 1))
(assert (<= 0 k3_1_0))
(assert (<= k3_1_0 1))
(assert (<= 0 k3_1_t))
(assert (<= k3_1_t 1))
(assert (<= 0 k3_2_0))
(assert (<= k3_2_0 1))
(assert (<= 0 k3_2_t))
(assert (<= k3_2_t 1))
(assert (<= 0 tau_0_0))
(assert (<= tau_0_0 1))
(assert (<= 0 tau_0_t))
(assert (<= tau_0_t 1))
(assert (<= 0 tau_1_0))
(assert (<= tau_1_0 1))
(assert (<= 0 tau_1_t))
(assert (<= tau_1_t 1))
(assert (<= 0 tau_2_0))
(assert (<= tau_2_0 1))
(assert (<= 0 tau_2_t))
(assert (<= tau_2_t 1))
(assert (<= -20 x1_0_0))
(assert (<= x1_0_0 100))
(assert (<= -20 x1_0_t))
(assert (<= x1_0_t 100))
(assert (<= -20 x1_1_0))
(assert (<= x1_1_0 100))
(assert (<= -20 x1_1_t))
(assert (<= x1_1_t 100))
(assert (<= -20 x1_2_0))
(assert (<= x1_2_0 100))
(assert (<= -20 x1_2_t))
(assert (<= x1_2_t 100))
(assert (<= -20 x2_0_0))
(assert (<= x2_0_0 100))
(assert (<= -20 x2_0_t))
(assert (<= x2_0_t 100))
(assert (<= -20 x2_1_0))
(assert (<= x2_1_0 100))
(assert (<= -20 x2_1_t))
(assert (<= x2_1_t 100))
(assert (<= -20 x2_2_0))
(assert (<= x2_2_0 100))
(assert (<= -20 x2_2_t))
(assert (<= x2_2_t 100))
(assert (<= -20 x3_0_0))
(assert (<= x3_0_0 100))
(assert (<= -20 x3_0_t))
(assert (<= x3_0_t 100))
(assert (<= -20 x3_1_0))
(assert (<= x3_1_0 100))
(assert (<= -20 x3_1_t))
(assert (<= x3_1_t 100))
(assert (<= -20 x3_2_0))
(assert (<= x3_2_0 100))
(assert (<= -20 x3_2_t))
(assert (<= x3_2_t 100))
(assert (<= 0 time_0))
(assert (<= time_0 1))
(assert (<= 0 time_1))
(assert (<= time_1 1))
(assert (<= 0 time_2))
(assert (<= time_2 1))
(assert (<= 1 mode_1_0))
(assert (<= mode_1_0 2))
(assert (<= 1 mode_1_1))
(assert (<= mode_1_1 2))
(assert (<= 1 mode_1_2))
(assert (<= mode_1_2 2))
(assert (<= 1 mode_2_0))
(assert (<= mode_2_0 2))
(assert (<= 1 mode_2_1))
(assert (<= mode_2_1 2))
(assert (<= 1 mode_2_2))
(assert (<= mode_2_2 2))
(assert (<= 1 mode_3_0))
(assert (<= mode_3_0 2))
(assert (<= 1 mode_3_1))
(assert (<= mode_3_1 2))
(assert (<= 1 mode_3_2))
(assert (<= mode_3_2 2))
(assert (<= 0 gamma_t3_2_0_0))
(assert (<= gamma_t3_2_0_0 1))
(assert (<= 0 gamma_t3_1_1_0))
(assert (<= gamma_t3_1_1_0 1))
(assert (<= 0 gamma_t3_2_1_0))
(assert (<= gamma_t3_2_1_0 1))
(assert (<= 0 gamma_t3_1_2_0))
(assert (<= gamma_t3_1_2_0 1))
(assert (<= 0 gamma_t3_2_2_0))
(assert (<= gamma_t3_2_2_0 1))
(assert (<= 0 gamma_t2_2_0_0))
(assert (<= gamma_t2_2_0_0 1))
(assert (<= 0 gamma_t2_1_1_0))
(assert (<= gamma_t2_1_1_0 1))
(assert (<= 0 gamma_t2_2_1_0))
(assert (<= gamma_t2_2_1_0 1))
(assert (<= 0 gamma_t2_1_2_0))
(assert (<= gamma_t2_1_2_0 1))
(assert (<= 0 gamma_t2_2_2_0))
(assert (<= gamma_t2_2_2_0 1))
(assert (<= 0 gamma_t1_2_0_0))
(assert (<= gamma_t1_2_0_0 1))
(assert (<= 0 gamma_t1_1_1_0))
(assert (<= gamma_t1_1_1_0 1))
(assert (<= 0 gamma_t1_2_1_0))
(assert (<= gamma_t1_2_1_0 1))
(assert (<= 0 gamma_t1_1_2_0))
(assert (<= gamma_t1_1_2_0 1))
(assert (<= 0 gamma_t1_2_2_0))
(assert (<= gamma_t1_2_2_0 1))
(assert (and (= mode_1_0 2) (= c31_0_0 0.02) (= c23_0_0 0.05) (= h3_0_0 300) (= k3_0_0 0.03) (= tau_0_0 0) (<= x2_0_0 (+ 20 1)) (>= x2_0_0 (- 20 1)) (= mode_2_0 2) (= c23_0_0 0.05) (= c12_0_0 0.01) (= h2_0_0 200) (= k2_0_0 0.045) (= tau_0_0 0) (<= x1_0_0 (+ 20 1)) (>= x1_0_0 (- 20 1)) (= mode_3_0 2) (= c31_0_0 0.02) (= c12_0_0 0.01) (= h1_0_0 100) (= k1_0_0 0.015) (= tau_0_0 0) (<= x1_0_0 (+ 20 1)) (>= x1_0_0 (- 20 1))))
(assert (and (=> (= gamma_t3_2_0_0 0) (not (= mode_1_0 2))) (=> (not (= mode_1_0 2)) (= gamma_t3_2_0_0 0)) (=> (= gamma_t3_2_0_0 1) (= mode_1_0 2)) (=> (= mode_1_0 2) (= gamma_t3_2_0_0 1)) (=> (= gamma_t2_2_0_0 0) (not (= mode_2_0 2))) (=> (not (= mode_2_0 2)) (= gamma_t2_2_0_0 0)) (=> (= gamma_t2_2_0_0 1) (= mode_2_0 2)) (=> (= mode_2_0 2) (= gamma_t2_2_0_0 1)) (=> (= gamma_t1_2_0_0 0) (not (= mode_3_0 2))) (=> (not (= mode_3_0 2)) (= gamma_t1_2_0_0 0)) (=> (= gamma_t1_2_0_0 1) (= mode_3_0 2)) (=> (= mode_3_0 2) (= gamma_t1_2_0_0 1)) (= [c12_0_t c23_0_t c31_0_t h1_0_t h2_0_t h3_0_t k1_0_t k2_0_t k3_0_t tau_0_t x1_0_t x2_0_t x3_0_t gamma_t3_2_0_0 gamma_t2_2_0_0 gamma_t1_2_0_0] (integral 0. time_0 [c12_0_0 c23_0_0 c31_0_0 h1_0_0 h2_0_0 h3_0_0 k1_0_0 k2_0_0 k3_0_0 tau_0_0 x1_0_0 x2_0_0 x3_0_0 gamma_t3_2_0_0 gamma_t2_2_0_0 gamma_t1_2_0_0] flow_0)) (=> (= mode_3_0 2) (forall_t 0 [0 time_0] (and (<= tau_0_t 1) (>= tau_0_t 0)))) (=> (= mode_2_0 2) (forall_t 0 [0 time_0] (and (<= tau_0_t 1) (>= tau_0_t 0)))) (=> (= mode_1_0 2) (forall_t 0 [0 time_0] (and (<= tau_0_t 1) (>= tau_0_t 0)))) (or (= mode_3_1 mode_3_0) (and (= tau_1_0 0) (> x1_0_t 20) (= tau_0_t 1) (= mode_3_1 1) (= mode_3_0 2)) (and (= tau_1_0 0) (<= x1_0_t 20) (= tau_0_t 1) (= mode_3_1 2) (= mode_3_0 2))) (or (= mode_2_1 mode_2_0) (and (= tau_1_0 0) (> x2_0_t 20) (= tau_0_t 1) (= mode_2_1 1) (= mode_2_0 2)) (and (= tau_1_0 0) (<= x2_0_t 20) (= tau_0_t 1) (= mode_2_1 2) (= mode_2_0 2))) (or (= mode_1_1 mode_1_0) (and (= tau_1_0 0) (> x3_0_t 20) (= tau_0_t 1) (= mode_1_1 1) (= mode_1_0 2)) (and (= tau_1_0 0) (<= x3_0_t 20) (= tau_0_t 1) (= mode_1_1 2) (= mode_1_0 2))) (or (= tau_0_t tau_1_0) (and (= tau_1_0 0) (= mode_3_1 1) (= mode_3_0 2)) (and (= tau_1_0 0) (= mode_3_1 2) (= mode_3_0 2)) (and (= tau_1_0 0) (= mode_2_1 1) (= mode_2_0 2)) (and (= tau_1_0 0) (= mode_2_1 2) (= mode_2_0 2)) (and (= tau_1_0 0) (= mode_1_1 1) (= mode_1_0 2)) (and (= tau_1_0 0) (= mode_1_1 2) (= mode_1_0 2))) (= x3_0_t x3_1_0) (= x2_0_t x2_1_0) (= x1_0_t x1_1_0) (= k3_0_t k3_1_0) (= k2_0_t k2_1_0) (= k1_0_t k1_1_0) (= h3_0_t h3_1_0) (= h2_0_t h2_1_0) (= h1_0_t h1_1_0) (= c31_0_t c31_1_0) (= c23_0_t c23_1_0) (= c12_0_t c12_1_0) (or (not (= mode_1_1 1)) (not (= mode_1_1 2))) (or (not (= mode_1_1 2)) (not (= mode_1_1 1))) (or (not (= mode_2_1 1)) (not (= mode_2_1 2))) (or (not (= mode_2_1 2)) (not (= mode_2_1 1))) (or (not (= mode_3_1 1)) (not (= mode_3_1 2))) (or (not (= mode_3_1 2)) (not (= mode_3_1 1))) (=> (= gamma_t3_1_1_0 0) (not (= mode_1_1 1))) (=> (not (= mode_1_1 1)) (= gamma_t3_1_1_0 0)) (=> (= gamma_t3_1_1_0 1) (= mode_1_1 1)) (=> (= mode_1_1 1) (= gamma_t3_1_1_0 1)) (=> (= gamma_t3_2_1_0 0) (not (= mode_1_1 2))) (=> (not (= mode_1_1 2)) (= gamma_t3_2_1_0 0)) (=> (= gamma_t3_2_1_0 1) (= mode_1_1 2)) (=> (= mode_1_1 2) (= gamma_t3_2_1_0 1)) (=> (= gamma_t2_1_1_0 0) (not (= mode_2_1 1))) (=> (not (= mode_2_1 1)) (= gamma_t2_1_1_0 0)) (=> (= gamma_t2_1_1_0 1) (= mode_2_1 1)) (=> (= mode_2_1 1) (= gamma_t2_1_1_0 1)) (=> (= gamma_t2_2_1_0 0) (not (= mode_2_1 2))) (=> (not (= mode_2_1 2)) (= gamma_t2_2_1_0 0)) (=> (= gamma_t2_2_1_0 1) (= mode_2_1 2)) (=> (= mode_2_1 2) (= gamma_t2_2_1_0 1)) (=> (= gamma_t1_1_1_0 0) (not (= mode_3_1 1))) (=> (not (= mode_3_1 1)) (= gamma_t1_1_1_0 0)) (=> (= gamma_t1_1_1_0 1) (= mode_3_1 1)) (=> (= mode_3_1 1) (= gamma_t1_1_1_0 1)) (=> (= gamma_t1_2_1_0 0) (not (= mode_3_1 2))) (=> (not (= mode_3_1 2)) (= gamma_t1_2_1_0 0)) (=> (= gamma_t1_2_1_0 1) (= mode_3_1 2)) (=> (= mode_3_1 2) (= gamma_t1_2_1_0 1)) (= [c12_1_t c23_1_t c31_1_t h1_1_t h2_1_t h3_1_t k1_1_t k2_1_t k3_1_t tau_1_t x1_1_t x2_1_t x3_1_t gamma_t3_1_1_0 gamma_t3_2_1_0 gamma_t2_1_1_0 gamma_t2_2_1_0 gamma_t1_1_1_0 gamma_t1_2_1_0] (integral 0. time_1 [c12_1_0 c23_1_0 c31_1_0 h1_1_0 h2_1_0 h3_1_0 k1_1_0 k2_1_0 k3_1_0 tau_1_0 x1_1_0 x2_1_0 x3_1_0 gamma_t3_1_1_0 gamma_t3_2_1_0 gamma_t2_1_1_0 gamma_t2_2_1_0 gamma_t1_1_1_0 gamma_t1_2_1_0] flow_1)) (=> (= mode_3_1 2) (forall_t 1 [0 time_1] (and (<= tau_1_t 1) (>= tau_1_t 0)))) (=> (= mode_3_1 1) (forall_t 1 [0 time_1] (and (<= tau_1_t 1) (>= tau_1_t 0)))) (=> (= mode_2_1 2) (forall_t 1 [0 time_1] (and (<= tau_1_t 1) (>= tau_1_t 0)))) (=> (= mode_2_1 1) (forall_t 1 [0 time_1] (and (<= tau_1_t 1) (>= tau_1_t 0)))) (=> (= mode_1_1 2) (forall_t 1 [0 time_1] (and (<= tau_1_t 1) (>= tau_1_t 0)))) (=> (= mode_1_1 1) (forall_t 1 [0 time_1] (and (<= tau_1_t 1) (>= tau_1_t 0)))) (or (= mode_3_2 mode_3_1) (and (= tau_2_0 0) (> x1_1_t 20) (= tau_1_t 1) (= mode_3_2 1) (= mode_3_1 2)) (and (= tau_2_0 0) (<= x1_1_t 20) (= tau_1_t 1) (= mode_3_2 2) (= mode_3_1 2)) (and (= tau_2_0 0) (> x1_1_t 20) (= tau_1_t 1) (= mode_3_2 1) (= mode_3_1 1)) (and (= tau_2_0 0) (<= x1_1_t 20) (= tau_1_t 1) (= mode_3_2 2) (= mode_3_1 1))) (or (= mode_2_2 mode_2_1) (and (= tau_2_0 0) (> x2_1_t 20) (= tau_1_t 1) (= mode_2_2 1) (= mode_2_1 2)) (and (= tau_2_0 0) (<= x2_1_t 20) (= tau_1_t 1) (= mode_2_2 2) (= mode_2_1 2)) (and (= tau_2_0 0) (> x2_1_t 20) (= tau_1_t 1) (= mode_2_2 1) (= mode_2_1 1)) (and (= tau_2_0 0) (<= x2_1_t 20) (= tau_1_t 1) (= mode_2_2 2) (= mode_2_1 1))) (or (= mode_1_2 mode_1_1) (and (= tau_2_0 0) (> x3_1_t 20) (= tau_1_t 1) (= mode_1_2 1) (= mode_1_1 2)) (and (= tau_2_0 0) (<= x3_1_t 20) (= tau_1_t 1) (= mode_1_2 2) (= mode_1_1 2)) (and (= tau_2_0 0) (> x3_1_t 20) (= tau_1_t 1) (= mode_1_2 1) (= mode_1_1 1)) (and (= tau_2_0 0) (<= x3_1_t 20) (= tau_1_t 1) (= mode_1_2 2) (= mode_1_1 1))) (or (= tau_1_t tau_2_0) (and (= tau_2_0 0) (= mode_3_2 1) (= mode_3_1 2)) (and (= tau_2_0 0) (= mode_3_2 2) (= mode_3_1 2)) (and (= tau_2_0 0) (= mode_3_2 1) (= mode_3_1 1)) (and (= tau_2_0 0) (= mode_3_2 2) (= mode_3_1 1)) (and (= tau_2_0 0) (= mode_2_2 1) (= mode_2_1 2)) (and (= tau_2_0 0) (= mode_2_2 2) (= mode_2_1 2)) (and (= tau_2_0 0) (= mode_2_2 1) (= mode_2_1 1)) (and (= tau_2_0 0) (= mode_2_2 2) (= mode_2_1 1)) (and (= tau_2_0 0) (= mode_1_2 1) (= mode_1_1 2)) (and (= tau_2_0 0) (= mode_1_2 2) (= mode_1_1 2)) (and (= tau_2_0 0) (= mode_1_2 1) (= mode_1_1 1)) (and (= tau_2_0 0) (= mode_1_2 2) (= mode_1_1 1))) (= x3_1_t x3_2_0) (= x2_1_t x2_2_0) (= x1_1_t x1_2_0) (= k3_1_t k3_2_0) (= k2_1_t k2_2_0) (= k1_1_t k1_2_0) (= h3_1_t h3_2_0) (= h2_1_t h2_2_0) (= h1_1_t h1_2_0) (= c31_1_t c31_2_0) (= c23_1_t c23_2_0) (= c12_1_t c12_2_0)))
(assert (and (=> (= gamma_t3_1_2_0 0) (not (= mode_1_2 1))) (=> (not (= mode_1_2 1)) (= gamma_t3_1_2_0 0)) (=> (= gamma_t3_1_2_0 1) (= mode_1_2 1)) (=> (= mode_1_2 1) (= gamma_t3_1_2_0 1)) (=> (= gamma_t3_2_2_0 0) (not (= mode_1_2 2))) (=> (not (= mode_1_2 2)) (= gamma_t3_2_2_0 0)) (=> (= gamma_t3_2_2_0 1) (= mode_1_2 2)) (=> (= mode_1_2 2) (= gamma_t3_2_2_0 1)) (=> (= gamma_t2_1_2_0 0) (not (= mode_2_2 1))) (=> (not (= mode_2_2 1)) (= gamma_t2_1_2_0 0)) (=> (= gamma_t2_1_2_0 1) (= mode_2_2 1)) (=> (= mode_2_2 1) (= gamma_t2_1_2_0 1)) (=> (= gamma_t2_2_2_0 0) (not (= mode_2_2 2))) (=> (not (= mode_2_2 2)) (= gamma_t2_2_2_0 0)) (=> (= gamma_t2_2_2_0 1) (= mode_2_2 2)) (=> (= mode_2_2 2) (= gamma_t2_2_2_0 1)) (=> (= gamma_t1_1_2_0 0) (not (= mode_3_2 1))) (=> (not (= mode_3_2 1)) (= gamma_t1_1_2_0 0)) (=> (= gamma_t1_1_2_0 1) (= mode_3_2 1)) (=> (= mode_3_2 1) (= gamma_t1_1_2_0 1)) (=> (= gamma_t1_2_2_0 0) (not (= mode_3_2 2))) (=> (not (= mode_3_2 2)) (= gamma_t1_2_2_0 0)) (=> (= gamma_t1_2_2_0 1) (= mode_3_2 2)) (=> (= mode_3_2 2) (= gamma_t1_2_2_0 1)) (= [c12_2_t c23_2_t c31_2_t h1_2_t h2_2_t h3_2_t k1_2_t k2_2_t k3_2_t tau_2_t x1_2_t x2_2_t x3_2_t gamma_t3_1_2_0 gamma_t3_2_2_0 gamma_t2_1_2_0 gamma_t2_2_2_0 gamma_t1_1_2_0 gamma_t1_2_2_0] (integral 0. time_2 [c12_2_0 c23_2_0 c31_2_0 h1_2_0 h2_2_0 h3_2_0 k1_2_0 k2_2_0 k3_2_0 tau_2_0 x1_2_0 x2_2_0 x3_2_0 gamma_t3_1_2_0 gamma_t3_2_2_0 gamma_t2_1_2_0 gamma_t2_2_2_0 gamma_t1_1_2_0 gamma_t1_2_2_0] flow_2)) (=> (= mode_3_2 2) (forall_t 2 [0 time_2] (and (<= tau_2_t 1) (>= tau_2_t 0)))) (=> (= mode_3_2 1) (forall_t 2 [0 time_2] (and (<= tau_2_t 1) (>= tau_2_t 0)))) (=> (= mode_2_2 2) (forall_t 2 [0 time_2] (and (<= tau_2_t 1) (>= tau_2_t 0)))) (=> (= mode_2_2 1) (forall_t 2 [0 time_2] (and (<= tau_2_t 1) (>= tau_2_t 0)))) (=> (= mode_1_2 2) (forall_t 2 [0 time_2] (and (<= tau_2_t 1) (>= tau_2_t 0)))) (=> (= mode_1_2 1) (forall_t 2 [0 time_2] (and (<= tau_2_t 1) (>= tau_2_t 0))))))
(assert (and (or (> x3_2_t (+ 20 5)) (< x3_2_t (- 20 5))) (or (> x2_2_t (+ 20 5)) (< x2_2_t (- 20 5))) (or (> x1_2_t (+ 20 5)) (< x1_2_t (- 20 5))) (or (not (= mode_1_2 1)) (not (= mode_1_2 2))) (or (not (= mode_1_2 2)) (not (= mode_1_2 1))) (or (not (= mode_2_2 1)) (not (= mode_2_2 2))) (or (not (= mode_2_2 2)) (not (= mode_2_2 1))) (or (not (= mode_3_2 1)) (not (= mode_3_2 2))) (or (not (= mode_3_2 2)) (not (= mode_3_2 1)))))
(check-sat)
(exit)
